//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChatClient.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IChatService")]
    public interface IChatService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/Login", ReplyAction="http://tempuri.org/IChatService/LoginResponse")]
        void Login(string newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/Login", ReplyAction="http://tempuri.org/IChatService/LoginResponse")]
        System.Threading.Tasks.Task LoginAsync(string newUser);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/LogOut", ReplyAction="http://tempuri.org/IChatService/LogOutResponse")]
        void LogOut(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/LogOut", ReplyAction="http://tempuri.org/IChatService/LogOutResponse")]
        System.Threading.Tasks.Task LogOutAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/SendMessage", ReplyAction="http://tempuri.org/IChatService/SendMessageResponse")]
        void SendMessage(WcfChatService.Models.MessageModel message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/SendMessage", ReplyAction="http://tempuri.org/IChatService/SendMessageResponse")]
        System.Threading.Tasks.Task SendMessageAsync(WcfChatService.Models.MessageModel message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/GetMessages", ReplyAction="http://tempuri.org/IChatService/GetMessagesResponse")]
        WcfChatService.Models.MessageModel[] GetMessages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChatService/GetMessages", ReplyAction="http://tempuri.org/IChatService/GetMessagesResponse")]
        System.Threading.Tasks.Task<WcfChatService.Models.MessageModel[]> GetMessagesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatServiceChannel : ChatClient.ServiceReference.IChatService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatServiceClient : System.ServiceModel.ClientBase<ChatClient.ServiceReference.IChatService>, ChatClient.ServiceReference.IChatService {
        
        public ChatServiceClient() {
        }
        
        public ChatServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ChatServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ChatServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Login(string newUser) {
            base.Channel.Login(newUser);
        }
        
        public System.Threading.Tasks.Task LoginAsync(string newUser) {
            return base.Channel.LoginAsync(newUser);
        }
        
        public void LogOut(string userName) {
            base.Channel.LogOut(userName);
        }
        
        public System.Threading.Tasks.Task LogOutAsync(string userName) {
            return base.Channel.LogOutAsync(userName);
        }
        
        public void SendMessage(WcfChatService.Models.MessageModel message) {
            base.Channel.SendMessage(message);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(WcfChatService.Models.MessageModel message) {
            return base.Channel.SendMessageAsync(message);
        }
        
        public WcfChatService.Models.MessageModel[] GetMessages() {
            return base.Channel.GetMessages();
        }
        
        public System.Threading.Tasks.Task<WcfChatService.Models.MessageModel[]> GetMessagesAsync() {
            return base.Channel.GetMessagesAsync();
        }
    }
}
